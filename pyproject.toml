[build-system]
requires = ["setuptools>=68.0", "wheel", "setuptools-scm>=8"]
build-backend = "setuptools.build_meta"

[project]
name = "eigenda-py"
dynamic = ["version"]
description = "Python client for EigenDA v2 - decentralized data availability service"
readme = "README.md"
requires-python = ">=3.9"
license = "MIT"
authors = [
    {name = "Swaroop Hegde", email = "email@swaroophegde.com"},
]
maintainers = [
    {name = "Powerloom Team", email = "hello@powerloom.io"},
]
keywords = ["eigenda", "ethereum", "data-availability", "blockchain", "web3", "powerloom"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Internet :: WWW/HTTP",
    "Topic :: System :: Distributed Computing",
]
dependencies = [
    "grpcio>=1.60.0",
    "grpcio-tools>=1.60.0",
    "protobuf>=4.25.0",
    "web3>=6.0.0",
    "eth-account>=0.10.0",
    "eth-utils>=2.0.0",
    "eth-abi>=4.0.0",
    "eth-typing>=3.0.0",
    "cryptography>=41.0.0",
    "pycryptodome>=3.19.0",
    "python-dotenv>=1.0.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.0.0",
    "pytest-mock>=3.10.0",
    "black>=23.0.0",
    "isort>=5.12.0",
    "mypy>=1.5.0",
    "types-protobuf>=4.24.0",
    "types-requests>=2.31.0",
    "flake8>=6.0.0",
    "pylint>=3.0.0",
    "pre-commit>=3.0.0",
]
docs = [
    "sphinx>=7.0.0",
    "sphinx-rtd-theme>=2.0.0",
    "autodoc-pydantic>=2.0.0",
]
notebook = [
    "jupyter>=1.0.0",
    "ipython>=8.0.0",
]

[project.urls]
"Homepage" = "https://powerloom.io/"
"Documentation" = "https://docs.eigencloud.xyz/products/eigenda/core-concepts/overview"
"Source Code" = "https://github.com/powerloom/eigenda-py"
"Bug Tracker" = "https://github.com/powerloom/eigenda-py/issues"

[tool.setuptools.packages.find]
where = ["src"]
include = ["eigenda*"]

[tool.setuptools.package-data]
eigenda = ["py.typed"]

[tool.black]
line-length = 100
target-version = ['py38']

[tool.isort]
profile = "black"
line_length = 100

[tool.mypy]
python_version = "3.9"
strict = true
warn_return_any = true
warn_unused_configs = true
no_implicit_reexport = true
ignore_missing_imports = true
exclude = [
    "src/eigenda/grpc/.*_pb2.*\\.py$",
]

[[tool.mypy.overrides]]
module = "grpc.*"
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "google.protobuf.*"
ignore_missing_imports = true

[tool.pytest.ini_options]
testpaths = ["tests"]
pythonpath = ["src"]
addopts = "-v --cov=eigenda --cov-report=term-missing --cov-report=html"
asyncio_mode = "auto"

[tool.coverage.run]
source = ["src/eigenda"]
omit = [
    "*/grpc/*_pb2*.py",
    "*/tests/*",
    "*/__init__.py",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if __name__ == .__main__.:",
    "raise AssertionError",
    "raise NotImplementedError",
]

[tool.pylint.messages_control]
disable = [
    "C0103",  # Invalid name
    "C0114",  # Missing module docstring
    "C0115",  # Missing class docstring
    "C0116",  # Missing function docstring
    "R0903",  # Too few public methods
    "R0913",  # Too many arguments
    "W0212",  # Protected access
]

[tool.pylint.format]
max-line-length = 100


[tool.setuptools-scm]
version_scheme = "python-simplified-semver"
local_scheme = "node-and-timestamp"