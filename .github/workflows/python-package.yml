# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Python package

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build:

    runs-on: buildjet-2vcpu-ubuntu-2204
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.9", "3.10", "3.11", "3.12", "3.13"]

    steps:
    - uses: actions/checkout@v4
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install Poetry
      uses: snok/install-poetry@v1
      with:
        virtualenvs-create: true
        virtualenvs-in-project: true
    - name: Cache Poetry virtualenv
      uses: actions/cache@v4
      with:
        path: .venv
        key: ${{ runner.os }}-poetry-${{ matrix.python-version }}-${{ hashFiles('''**/poetry.lock''') }}
        restore-keys: |
          ${{ runner.os }}-poetry-${{ matrix.python-version }}-
    - name: Install dependencies
      run: poetry install --no-interaction --no-root
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        poetry run flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # Check all linting rules and show success message if clean
        if poetry run flake8 . --count --max-complexity=10 --max-line-length=127 --statistics | grep -q "^0$"; then
          echo "✅ All linting checks passed! 0 errors"
        else
          echo "⚠️  Linting issues found (treated as warnings in CI)"
          poetry run flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
        fi
    - name: Test with pytest
      run: |
        poetry run pytest tests/ --junitxml=junit/test-results.xml --cov=src --cov-report=xml --cov-report=html --cov-report=term-missing
    - name: Upload coverage reports
      uses: actions/upload-artifact@v4
      if: matrix.python-version == '3.12'
      with:
        name: coverage-reports
        path: |
          coverage.xml
          htmlcov/
